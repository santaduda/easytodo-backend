name: Deploy to ECR

on:
  push:
    branches: [feature/github_build_django]
  pull_request:
    branches: [feature/github_build_django]
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Generate Pro .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_DEBUG: ${{ secrets.DEBUG }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          file_name: .env
          fail_on_empty: false
      - name: List all files in folder
        run : |
          ls -l
          cat .env
      - name: Copy Prod Environment files to project root folder
        run : |
          cp environments/prod/docker-compose.yml environments/prod/Dockerfile .
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
